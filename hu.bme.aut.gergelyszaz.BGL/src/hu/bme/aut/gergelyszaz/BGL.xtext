grammar hu.bme.aut.gergelyszaz.BGL with org.eclipse.xtext.common.Terminals

generate bGL "http://www.bme.hu/aut/gergelyszaz/BGL"

Model:
	'GAME' name=ID
	 player=Player & board=Board & (tokens+=Token)* & rules=Rules;

Player:
	name='PLAYERS' playercount=INT
	'{'(variables+=SimpleAssignment)*'}'
	;

Board:
	
	name='BOARD' '{'
	 (variables+=SimpleAssignment)*
	(fields+=Field)* 
	'}'
	
	;
	
Rules:
	name='RULES' '{' turnrules=TurnRules '}'
;

TurnRules:
	name='TURN' '{' 
		(actions+=Action)*
		
	'}'
;
Token returns Token:
	'TOKEN' name=ID '{' (variables+=SimpleAssignment)* '}'
;

Field:
	name=ID '(' x=INT ',' y=INT ',' z=INT ')' '{'
	(neighbours+=[Field])* 
	(variables+=SimpleAssignment)*
	'}';

Action:
	
	(name='SPAWN' (token=[Token]) )|
	(name='MOVE') | (name='DESTROY') |
	(name='SELECT' objectOfSelect=('TOKEN'|'FIELD') 'WHERE' filter=OrExp)	|
	(assignment=ValueAssignment) |
	(gotoCondition=GotoCondition) |
	(label=Label)
	
	;




//Part for writing condition
OrExp:
	expressions+=AndExp (operators+='OR' expressions+=AndExp)*
;

AndExp:
	expressions+=BooleanExp (operators+='AND' expressions+=BooleanExp)*
;

BooleanExp:
	(not='NOT')?
	(left=AttributeOrInt name=('!=='|'==='|'=='|'!='|'>'|'>='|'<'|'<=') right=AttributeOrInt)
	|
	( '('nestedExp=OrExp')' )
;

AttributeName:
	( name=ID|(parent=ID'.'child=AttributeName) )
;

AttributeOrInt:
	attribute=AttributeName| value=INT
;

GotoCondition:
	'IF' condition=OrExp name='GOTO' goto=[Label]
;

Label:
	'LABEL' name=ID 
;



//Arithmetic operations and value assignment
AdditionExp:
	expressions+=MultiplicationExp (operators+= ('+'|'-') expressions+=MultiplicationExp)*
;

MultiplicationExp:
	(expressions+=AttributeOrInt (operators+= ('*'|'/') expressions+=AttributeOrInt)*)
	|
	( '(' nestedExp=AdditionExp ')' )
;

ValueAssignment:
	name=AttributeName  '=' addition=AdditionExp 
;

SimpleAssignment:
	name=ID '=' attribute=AttributeOrInt
;







