/*
 * generated by Xtext
 */
grammar InternalBGL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package hu.bme.aut.gergelyszaz.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package hu.bme.aut.gergelyszaz.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import hu.bme.aut.gergelyszaz.services.BGLGrammarAccess;

}

@parser::members {
 
 	private BGLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(BGLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getUnorderedGroup()); }
(rule__Model__UnorderedGroup)
{ after(grammarAccess.getModelAccess().getUnorderedGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlayer
entryRulePlayer 
:
{ before(grammarAccess.getPlayerRule()); }
	 rulePlayer
{ after(grammarAccess.getPlayerRule()); } 
	 EOF 
;

// Rule Player
rulePlayer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlayerAccess().getGroup()); }
(rule__Player__Group__0)
{ after(grammarAccess.getPlayerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoard
entryRuleBoard 
:
{ before(grammarAccess.getBoardRule()); }
	 ruleBoard
{ after(grammarAccess.getBoardRule()); } 
	 EOF 
;

// Rule Board
ruleBoard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoardAccess().getGroup()); }
(rule__Board__Group__0)
{ after(grammarAccess.getBoardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRules
entryRuleRules 
:
{ before(grammarAccess.getRulesRule()); }
	 ruleRules
{ after(grammarAccess.getRulesRule()); } 
	 EOF 
;

// Rule Rules
ruleRules
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRulesAccess().getGroup()); }
(rule__Rules__Group__0)
{ after(grammarAccess.getRulesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTurnRules
entryRuleTurnRules 
:
{ before(grammarAccess.getTurnRulesRule()); }
	 ruleTurnRules
{ after(grammarAccess.getTurnRulesRule()); } 
	 EOF 
;

// Rule TurnRules
ruleTurnRules
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTurnRulesAccess().getGroup()); }
(rule__TurnRules__Group__0)
{ after(grammarAccess.getTurnRulesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleToken
entryRuleToken 
:
{ before(grammarAccess.getTokenRule()); }
	 ruleToken
{ after(grammarAccess.getTokenRule()); } 
	 EOF 
;

// Rule Token
ruleToken
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTokenAccess().getGroup()); }
(rule__Token__Group__0)
{ after(grammarAccess.getTokenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField
entryRuleField 
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccess().getGroup()); }
(rule__Field__Group__0)
{ after(grammarAccess.getFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getAlternatives()); }
(rule__Action__Alternatives)
{ after(grammarAccess.getActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExp
entryRuleOrExp 
:
{ before(grammarAccess.getOrExpRule()); }
	 ruleOrExp
{ after(grammarAccess.getOrExpRule()); } 
	 EOF 
;

// Rule OrExp
ruleOrExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpAccess().getGroup()); }
(rule__OrExp__Group__0)
{ after(grammarAccess.getOrExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExp
entryRuleAndExp 
:
{ before(grammarAccess.getAndExpRule()); }
	 ruleAndExp
{ after(grammarAccess.getAndExpRule()); } 
	 EOF 
;

// Rule AndExp
ruleAndExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpAccess().getGroup()); }
(rule__AndExp__Group__0)
{ after(grammarAccess.getAndExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanExp
entryRuleBooleanExp 
:
{ before(grammarAccess.getBooleanExpRule()); }
	 ruleBooleanExp
{ after(grammarAccess.getBooleanExpRule()); } 
	 EOF 
;

// Rule BooleanExp
ruleBooleanExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanExpAccess().getAlternatives()); }
(rule__BooleanExp__Alternatives)
{ after(grammarAccess.getBooleanExpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeName
entryRuleAttributeName 
:
{ before(grammarAccess.getAttributeNameRule()); }
	 ruleAttributeName
{ after(grammarAccess.getAttributeNameRule()); } 
	 EOF 
;

// Rule AttributeName
ruleAttributeName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeNameAccess().getAlternatives()); }
(rule__AttributeName__Alternatives)
{ after(grammarAccess.getAttributeNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeOrInt
entryRuleAttributeOrInt 
:
{ before(grammarAccess.getAttributeOrIntRule()); }
	 ruleAttributeOrInt
{ after(grammarAccess.getAttributeOrIntRule()); } 
	 EOF 
;

// Rule AttributeOrInt
ruleAttributeOrInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeOrIntAccess().getAlternatives()); }
(rule__AttributeOrInt__Alternatives)
{ after(grammarAccess.getAttributeOrIntAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGotoCondition
entryRuleGotoCondition 
:
{ before(grammarAccess.getGotoConditionRule()); }
	 ruleGotoCondition
{ after(grammarAccess.getGotoConditionRule()); } 
	 EOF 
;

// Rule GotoCondition
ruleGotoCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGotoConditionAccess().getGroup()); }
(rule__GotoCondition__Group__0)
{ after(grammarAccess.getGotoConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabel
entryRuleLabel 
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelAccess().getGroup()); }
(rule__Label__Group__0)
{ after(grammarAccess.getLabelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditionExp
entryRuleAdditionExp 
:
{ before(grammarAccess.getAdditionExpRule()); }
	 ruleAdditionExp
{ after(grammarAccess.getAdditionExpRule()); } 
	 EOF 
;

// Rule AdditionExp
ruleAdditionExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditionExpAccess().getGroup()); }
(rule__AdditionExp__Group__0)
{ after(grammarAccess.getAdditionExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicationExp
entryRuleMultiplicationExp 
:
{ before(grammarAccess.getMultiplicationExpRule()); }
	 ruleMultiplicationExp
{ after(grammarAccess.getMultiplicationExpRule()); } 
	 EOF 
;

// Rule MultiplicationExp
ruleMultiplicationExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicationExpAccess().getAlternatives()); }
(rule__MultiplicationExp__Alternatives)
{ after(grammarAccess.getMultiplicationExpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueAssignment
entryRuleValueAssignment 
:
{ before(grammarAccess.getValueAssignmentRule()); }
	 ruleValueAssignment
{ after(grammarAccess.getValueAssignmentRule()); } 
	 EOF 
;

// Rule ValueAssignment
ruleValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAssignmentAccess().getGroup()); }
(rule__ValueAssignment__Group__0)
{ after(grammarAccess.getValueAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleAssignment
entryRuleSimpleAssignment 
:
{ before(grammarAccess.getSimpleAssignmentRule()); }
	 ruleSimpleAssignment
{ after(grammarAccess.getSimpleAssignmentRule()); } 
	 EOF 
;

// Rule SimpleAssignment
ruleSimpleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleAssignmentAccess().getGroup()); }
(rule__SimpleAssignment__Group__0)
{ after(grammarAccess.getSimpleAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Action__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_0()); }
(rule__Action__Group_0__0)
{ after(grammarAccess.getActionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getActionAccess().getNameAssignment_1()); }
(rule__Action__NameAssignment_1)
{ after(grammarAccess.getActionAccess().getNameAssignment_1()); }
)

    |(
{ before(grammarAccess.getActionAccess().getNameAssignment_2()); }
(rule__Action__NameAssignment_2)
{ after(grammarAccess.getActionAccess().getNameAssignment_2()); }
)

    |(
{ before(grammarAccess.getActionAccess().getGroup_3()); }
(rule__Action__Group_3__0)
{ after(grammarAccess.getActionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getActionAccess().getAssignmentAssignment_4()); }
(rule__Action__AssignmentAssignment_4)
{ after(grammarAccess.getActionAccess().getAssignmentAssignment_4()); }
)

    |(
{ before(grammarAccess.getActionAccess().getGotoConditionAssignment_5()); }
(rule__Action__GotoConditionAssignment_5)
{ after(grammarAccess.getActionAccess().getGotoConditionAssignment_5()); }
)

    |(
{ before(grammarAccess.getActionAccess().getLabelAssignment_6()); }
(rule__Action__LabelAssignment_6)
{ after(grammarAccess.getActionAccess().getLabelAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ObjectOfSelectAlternatives_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getObjectOfSelectTOKENKeyword_3_1_0_0()); }

	'TOKEN' 

{ after(grammarAccess.getActionAccess().getObjectOfSelectTOKENKeyword_3_1_0_0()); }
)

    |(
{ before(grammarAccess.getActionAccess().getObjectOfSelectFIELDKeyword_3_1_0_1()); }

	'FIELD' 

{ after(grammarAccess.getActionAccess().getObjectOfSelectFIELDKeyword_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getGroup_0()); }
(rule__BooleanExp__Group_0__0)
{ after(grammarAccess.getBooleanExpAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getBooleanExpAccess().getGroup_1()); }
(rule__BooleanExp__Group_1__0)
{ after(grammarAccess.getBooleanExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__NameAlternatives_0_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getNameExclamationMarkEqualsSignEqualsSignKeyword_0_1_1_0_0()); }

	'!==' 

{ after(grammarAccess.getBooleanExpAccess().getNameExclamationMarkEqualsSignEqualsSignKeyword_0_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getBooleanExpAccess().getNameEqualsSignEqualsSignEqualsSignKeyword_0_1_1_0_1()); }

	'===' 

{ after(grammarAccess.getBooleanExpAccess().getNameEqualsSignEqualsSignEqualsSignKeyword_0_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getBooleanExpAccess().getNameEqualsSignEqualsSignKeyword_0_1_1_0_2()); }

	'==' 

{ after(grammarAccess.getBooleanExpAccess().getNameEqualsSignEqualsSignKeyword_0_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getBooleanExpAccess().getNameExclamationMarkEqualsSignKeyword_0_1_1_0_3()); }

	'!=' 

{ after(grammarAccess.getBooleanExpAccess().getNameExclamationMarkEqualsSignKeyword_0_1_1_0_3()); }
)

    |(
{ before(grammarAccess.getBooleanExpAccess().getNameGreaterThanSignKeyword_0_1_1_0_4()); }

	'>' 

{ after(grammarAccess.getBooleanExpAccess().getNameGreaterThanSignKeyword_0_1_1_0_4()); }
)

    |(
{ before(grammarAccess.getBooleanExpAccess().getNameGreaterThanSignEqualsSignKeyword_0_1_1_0_5()); }

	'>=' 

{ after(grammarAccess.getBooleanExpAccess().getNameGreaterThanSignEqualsSignKeyword_0_1_1_0_5()); }
)

    |(
{ before(grammarAccess.getBooleanExpAccess().getNameLessThanSignKeyword_0_1_1_0_6()); }

	'<' 

{ after(grammarAccess.getBooleanExpAccess().getNameLessThanSignKeyword_0_1_1_0_6()); }
)

    |(
{ before(grammarAccess.getBooleanExpAccess().getNameLessThanSignEqualsSignKeyword_0_1_1_0_7()); }

	'<=' 

{ after(grammarAccess.getBooleanExpAccess().getNameLessThanSignEqualsSignKeyword_0_1_1_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getNameAssignment_0()); }
(rule__AttributeName__NameAssignment_0)
{ after(grammarAccess.getAttributeNameAccess().getNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getAttributeNameAccess().getGroup_1()); }
(rule__AttributeName__Group_1__0)
{ after(grammarAccess.getAttributeNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeOrInt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeOrIntAccess().getAttributeAssignment_0()); }
(rule__AttributeOrInt__AttributeAssignment_0)
{ after(grammarAccess.getAttributeOrIntAccess().getAttributeAssignment_0()); }
)

    |(
{ before(grammarAccess.getAttributeOrIntAccess().getValueAssignment_1()); }
(rule__AttributeOrInt__ValueAssignment_1)
{ after(grammarAccess.getAttributeOrIntAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExp__OperatorsAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpAccess().getOperatorsPlusSignKeyword_1_0_0_0()); }

	'+' 

{ after(grammarAccess.getAdditionExpAccess().getOperatorsPlusSignKeyword_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getAdditionExpAccess().getOperatorsHyphenMinusKeyword_1_0_0_1()); }

	'-' 

{ after(grammarAccess.getAdditionExpAccess().getOperatorsHyphenMinusKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpAccess().getGroup_0()); }
(rule__MultiplicationExp__Group_0__0)
{ after(grammarAccess.getMultiplicationExpAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationExpAccess().getGroup_1()); }
(rule__MultiplicationExp__Group_1__0)
{ after(grammarAccess.getMultiplicationExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExp__OperatorsAlternatives_0_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpAccess().getOperatorsAsteriskKeyword_0_1_0_0_0()); }

	'*' 

{ after(grammarAccess.getMultiplicationExpAccess().getOperatorsAsteriskKeyword_0_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getMultiplicationExpAccess().getOperatorsSolidusKeyword_0_1_0_0_1()); }

	'/' 

{ after(grammarAccess.getMultiplicationExpAccess().getOperatorsSolidusKeyword_0_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_0__0__Impl
	rule__Model__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGAMEKeyword_0_0()); }

	'GAME' 

{ after(grammarAccess.getModelAccess().getGAMEKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_0__1__Impl
	rule__Model__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_0_1()); }
(rule__Model__NameAssignment_0_1)
{ after(grammarAccess.getModelAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPlayerAssignment_0_2()); }
(rule__Model__PlayerAssignment_0_2)
{ after(grammarAccess.getModelAccess().getPlayerAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Player__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Player__Group__0__Impl
	rule__Player__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Player__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlayerAccess().getNameAssignment_0()); }
(rule__Player__NameAssignment_0)
{ after(grammarAccess.getPlayerAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Player__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Player__Group__1__Impl
	rule__Player__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Player__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlayerAccess().getPlayercountAssignment_1()); }
(rule__Player__PlayercountAssignment_1)
{ after(grammarAccess.getPlayerAccess().getPlayercountAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Player__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Player__Group__2__Impl
	rule__Player__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Player__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlayerAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPlayerAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Player__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Player__Group__3__Impl
	rule__Player__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Player__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlayerAccess().getVariablesAssignment_3()); }
(rule__Player__VariablesAssignment_3)*
{ after(grammarAccess.getPlayerAccess().getVariablesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Player__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Player__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Player__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlayerAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getPlayerAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Board__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Board__Group__0__Impl
	rule__Board__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoardAccess().getNameAssignment_0()); }
(rule__Board__NameAssignment_0)
{ after(grammarAccess.getBoardAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Board__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Board__Group__1__Impl
	rule__Board__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoardAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBoardAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Board__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Board__Group__2__Impl
	rule__Board__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoardAccess().getVariablesAssignment_2()); }
(rule__Board__VariablesAssignment_2)*
{ after(grammarAccess.getBoardAccess().getVariablesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Board__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Board__Group__3__Impl
	rule__Board__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoardAccess().getFieldsAssignment_3()); }
(rule__Board__FieldsAssignment_3)*
{ after(grammarAccess.getBoardAccess().getFieldsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Board__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Board__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoardAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getBoardAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Rules__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rules__Group__0__Impl
	rule__Rules__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rules__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesAccess().getNameAssignment_0()); }
(rule__Rules__NameAssignment_0)
{ after(grammarAccess.getRulesAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rules__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rules__Group__1__Impl
	rule__Rules__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rules__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getRulesAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rules__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rules__Group__2__Impl
	rule__Rules__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rules__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesAccess().getTurnrulesAssignment_2()); }
(rule__Rules__TurnrulesAssignment_2)
{ after(grammarAccess.getRulesAccess().getTurnrulesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rules__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rules__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rules__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getRulesAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TurnRules__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TurnRules__Group__0__Impl
	rule__TurnRules__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRules__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnRulesAccess().getNameAssignment_0()); }
(rule__TurnRules__NameAssignment_0)
{ after(grammarAccess.getTurnRulesAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TurnRules__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TurnRules__Group__1__Impl
	rule__TurnRules__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRules__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnRulesAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getTurnRulesAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TurnRules__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TurnRules__Group__2__Impl
	rule__TurnRules__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRules__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnRulesAccess().getActionsAssignment_2()); }
(rule__TurnRules__ActionsAssignment_2)*
{ after(grammarAccess.getTurnRulesAccess().getActionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TurnRules__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TurnRules__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRules__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnRulesAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getTurnRulesAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Token__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Token__Group__0__Impl
	rule__Token__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Token__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getTOKENKeyword_0()); }

	'TOKEN' 

{ after(grammarAccess.getTokenAccess().getTOKENKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Token__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Token__Group__1__Impl
	rule__Token__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Token__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getNameAssignment_1()); }
(rule__Token__NameAssignment_1)
{ after(grammarAccess.getTokenAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Token__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Token__Group__2__Impl
	rule__Token__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Token__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getTokenAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Token__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Token__Group__3__Impl
	rule__Token__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Token__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getVariablesAssignment_3()); }
(rule__Token__VariablesAssignment_3)*
{ after(grammarAccess.getTokenAccess().getVariablesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Token__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Token__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Token__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getTokenAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Field__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameAssignment_0()); }
(rule__Field__NameAssignment_0)
{ after(grammarAccess.getFieldAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFieldAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getXAssignment_2()); }
(rule__Field__XAssignment_2)
{ after(grammarAccess.getFieldAccess().getXAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getFieldAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__4__Impl
	rule__Field__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getYAssignment_4()); }
(rule__Field__YAssignment_4)
{ after(grammarAccess.getFieldAccess().getYAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__5__Impl
	rule__Field__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getFieldAccess().getCommaKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__6__Impl
	rule__Field__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getZAssignment_6()); }
(rule__Field__ZAssignment_6)
{ after(grammarAccess.getFieldAccess().getZAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__7__Impl
	rule__Field__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getFieldAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__8__Impl
	rule__Field__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getLeftCurlyBracketKeyword_8()); }

	'{' 

{ after(grammarAccess.getFieldAccess().getLeftCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__9__Impl
	rule__Field__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNeighboursAssignment_9()); }
(rule__Field__NeighboursAssignment_9)*
{ after(grammarAccess.getFieldAccess().getNeighboursAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__10__Impl
	rule__Field__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getVariablesAssignment_10()); }
(rule__Field__VariablesAssignment_10)*
{ after(grammarAccess.getFieldAccess().getVariablesAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getRightCurlyBracketKeyword_11()); }

	'}' 

{ after(grammarAccess.getFieldAccess().getRightCurlyBracketKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__Action__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_0__0__Impl
	rule__Action__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameAssignment_0_0()); }
(rule__Action__NameAssignment_0_0)
{ after(grammarAccess.getActionAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getTokenAssignment_0_1()); }
(rule__Action__TokenAssignment_0_1)
{ after(grammarAccess.getActionAccess().getTokenAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Action__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_3__0__Impl
	rule__Action__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameAssignment_3_0()); }
(rule__Action__NameAssignment_3_0)
{ after(grammarAccess.getActionAccess().getNameAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_3__1__Impl
	rule__Action__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getObjectOfSelectAssignment_3_1()); }
(rule__Action__ObjectOfSelectAssignment_3_1)
{ after(grammarAccess.getActionAccess().getObjectOfSelectAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_3__2__Impl
	rule__Action__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getWHEREKeyword_3_2()); }

	'WHERE' 

{ after(grammarAccess.getActionAccess().getWHEREKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getFilterAssignment_3_3()); }
(rule__Action__FilterAssignment_3_3)
{ after(grammarAccess.getActionAccess().getFilterAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OrExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group__0__Impl
	rule__OrExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getExpressionsAssignment_0()); }
(rule__OrExp__ExpressionsAssignment_0)
{ after(grammarAccess.getOrExpAccess().getExpressionsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getGroup_1()); }
(rule__OrExp__Group_1__0)*
{ after(grammarAccess.getOrExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__0__Impl
	rule__OrExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getOperatorsAssignment_1_0()); }
(rule__OrExp__OperatorsAssignment_1_0)
{ after(grammarAccess.getOrExpAccess().getOperatorsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getExpressionsAssignment_1_1()); }
(rule__OrExp__ExpressionsAssignment_1_1)
{ after(grammarAccess.getOrExpAccess().getExpressionsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group__0__Impl
	rule__AndExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getExpressionsAssignment_0()); }
(rule__AndExp__ExpressionsAssignment_0)
{ after(grammarAccess.getAndExpAccess().getExpressionsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getGroup_1()); }
(rule__AndExp__Group_1__0)*
{ after(grammarAccess.getAndExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__0__Impl
	rule__AndExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getOperatorsAssignment_1_0()); }
(rule__AndExp__OperatorsAssignment_1_0)
{ after(grammarAccess.getAndExpAccess().getOperatorsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getExpressionsAssignment_1_1()); }
(rule__AndExp__ExpressionsAssignment_1_1)
{ after(grammarAccess.getAndExpAccess().getExpressionsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanExp__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExp__Group_0__0__Impl
	rule__BooleanExp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getNotAssignment_0_0()); }
(rule__BooleanExp__NotAssignment_0_0)?
{ after(grammarAccess.getBooleanExpAccess().getNotAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExp__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExp__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getGroup_0_1()); }
(rule__BooleanExp__Group_0_1__0)
{ after(grammarAccess.getBooleanExpAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanExp__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExp__Group_0_1__0__Impl
	rule__BooleanExp__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getLeftAssignment_0_1_0()); }
(rule__BooleanExp__LeftAssignment_0_1_0)
{ after(grammarAccess.getBooleanExpAccess().getLeftAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExp__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExp__Group_0_1__1__Impl
	rule__BooleanExp__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getNameAssignment_0_1_1()); }
(rule__BooleanExp__NameAssignment_0_1_1)
{ after(grammarAccess.getBooleanExpAccess().getNameAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExp__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExp__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getRightAssignment_0_1_2()); }
(rule__BooleanExp__RightAssignment_0_1_2)
{ after(grammarAccess.getBooleanExpAccess().getRightAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BooleanExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExp__Group_1__0__Impl
	rule__BooleanExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getBooleanExpAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExp__Group_1__1__Impl
	rule__BooleanExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getNestedExpAssignment_1_1()); }
(rule__BooleanExp__NestedExpAssignment_1_1)
{ after(grammarAccess.getBooleanExpAccess().getNestedExpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getBooleanExpAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_1__0__Impl
	rule__AttributeName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getParentAssignment_1_0()); }
(rule__AttributeName__ParentAssignment_1_0)
{ after(grammarAccess.getAttributeNameAccess().getParentAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_1__1__Impl
	rule__AttributeName__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getAttributeNameAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getChildAssignment_1_2()); }
(rule__AttributeName__ChildAssignment_1_2)
{ after(grammarAccess.getAttributeNameAccess().getChildAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GotoCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoCondition__Group__0__Impl
	rule__GotoCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoConditionAccess().getIFKeyword_0()); }

	'IF' 

{ after(grammarAccess.getGotoConditionAccess().getIFKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoCondition__Group__1__Impl
	rule__GotoCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoConditionAccess().getConditionAssignment_1()); }
(rule__GotoCondition__ConditionAssignment_1)
{ after(grammarAccess.getGotoConditionAccess().getConditionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoCondition__Group__2__Impl
	rule__GotoCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoCondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoConditionAccess().getNameAssignment_2()); }
(rule__GotoCondition__NameAssignment_2)
{ after(grammarAccess.getGotoConditionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GotoCondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GotoCondition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GotoCondition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoConditionAccess().getGotoAssignment_3()); }
(rule__GotoCondition__GotoAssignment_3)
{ after(grammarAccess.getGotoConditionAccess().getGotoAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Label__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getLABELKeyword_0()); }

	'LABEL' 

{ after(grammarAccess.getLabelAccess().getLABELKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameAssignment_1()); }
(rule__Label__NameAssignment_1)
{ after(grammarAccess.getLabelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditionExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExp__Group__0__Impl
	rule__AdditionExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpAccess().getExpressionsAssignment_0()); }
(rule__AdditionExp__ExpressionsAssignment_0)
{ after(grammarAccess.getAdditionExpAccess().getExpressionsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpAccess().getGroup_1()); }
(rule__AdditionExp__Group_1__0)*
{ after(grammarAccess.getAdditionExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditionExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExp__Group_1__0__Impl
	rule__AdditionExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpAccess().getOperatorsAssignment_1_0()); }
(rule__AdditionExp__OperatorsAssignment_1_0)
{ after(grammarAccess.getAdditionExpAccess().getOperatorsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditionExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditionExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpAccess().getExpressionsAssignment_1_1()); }
(rule__AdditionExp__ExpressionsAssignment_1_1)
{ after(grammarAccess.getAdditionExpAccess().getExpressionsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicationExp__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExp__Group_0__0__Impl
	rule__MultiplicationExp__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExp__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpAccess().getExpressionsAssignment_0_0()); }
(rule__MultiplicationExp__ExpressionsAssignment_0_0)
{ after(grammarAccess.getMultiplicationExpAccess().getExpressionsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExp__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExp__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExp__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpAccess().getGroup_0_1()); }
(rule__MultiplicationExp__Group_0_1__0)*
{ after(grammarAccess.getMultiplicationExpAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicationExp__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExp__Group_0_1__0__Impl
	rule__MultiplicationExp__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExp__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpAccess().getOperatorsAssignment_0_1_0()); }
(rule__MultiplicationExp__OperatorsAssignment_0_1_0)
{ after(grammarAccess.getMultiplicationExpAccess().getOperatorsAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExp__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExp__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExp__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpAccess().getExpressionsAssignment_0_1_1()); }
(rule__MultiplicationExp__ExpressionsAssignment_0_1_1)
{ after(grammarAccess.getMultiplicationExpAccess().getExpressionsAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicationExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExp__Group_1__0__Impl
	rule__MultiplicationExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getMultiplicationExpAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExp__Group_1__1__Impl
	rule__MultiplicationExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpAccess().getNestedExpAssignment_1_1()); }
(rule__MultiplicationExp__NestedExpAssignment_1_1)
{ after(grammarAccess.getMultiplicationExpAccess().getNestedExpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicationExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getMultiplicationExpAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValueAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueAssignment__Group__0__Impl
	rule__ValueAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getNameAssignment_0()); }
(rule__ValueAssignment__NameAssignment_0)
{ after(grammarAccess.getValueAssignmentAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueAssignment__Group__1__Impl
	rule__ValueAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getValueAssignmentAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueAssignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getAdditionAssignment_2()); }
(rule__ValueAssignment__AdditionAssignment_2)
{ after(grammarAccess.getValueAssignmentAccess().getAdditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SimpleAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleAssignment__Group__0__Impl
	rule__SimpleAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAssignmentAccess().getNameAssignment_0()); }
(rule__SimpleAssignment__NameAssignment_0)
{ after(grammarAccess.getSimpleAssignmentAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleAssignment__Group__1__Impl
	rule__SimpleAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAssignmentAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getSimpleAssignmentAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleAssignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAssignmentAccess().getAttributeAssignment_2()); }
(rule__SimpleAssignment__AttributeAssignment_2)
{ after(grammarAccess.getSimpleAssignmentAccess().getAttributeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__UnorderedGroup
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup());
    }
:
	rule__Model__UnorderedGroup__0
	
	{getUnorderedGroupHelper().canLeave(grammarAccess.getModelAccess().getUnorderedGroup())}?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}


rule__Model__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getModelAccess().getGroup_0()); }
						(rule__Model__Group_0__0)
						{ after(grammarAccess.getModelAccess().getGroup_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getModelAccess().getBoardAssignment_1()); }
						(rule__Model__BoardAssignment_1)
						{ after(grammarAccess.getModelAccess().getBoardAssignment_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					(
						{ before(grammarAccess.getModelAccess().getTokensAssignment_2()); }
						(rule__Model__TokensAssignment_2)
						{ after(grammarAccess.getModelAccess().getTokensAssignment_2()); }
					)
					(
						{ before(grammarAccess.getModelAccess().getTokensAssignment_2()); }
						((rule__Model__TokensAssignment_2)=>rule__Model__TokensAssignment_2)*
						{ after(grammarAccess.getModelAccess().getTokensAssignment_2()); }
					)					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getModelAccess().getRulesAssignment_3()); }
						(rule__Model__RulesAssignment_3)
						{ after(grammarAccess.getModelAccess().getRulesAssignment_3()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}


rule__Model__UnorderedGroup__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__UnorderedGroup__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__UnorderedGroup__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__UnorderedGroup__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}










rule__Model__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PlayerAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPlayerPlayerParserRuleCall_0_2_0()); }
	rulePlayer{ after(grammarAccess.getModelAccess().getPlayerPlayerParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__BoardAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getBoardBoardParserRuleCall_1_0()); }
	ruleBoard{ after(grammarAccess.getModelAccess().getBoardBoardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TokensAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getTokensTokenParserRuleCall_2_0()); }
	ruleToken{ after(grammarAccess.getModelAccess().getTokensTokenParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RulesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRulesRulesParserRuleCall_3_0()); }
	ruleRules{ after(grammarAccess.getModelAccess().getRulesRulesParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Player__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlayerAccess().getNamePLAYERSKeyword_0_0()); }
(
{ before(grammarAccess.getPlayerAccess().getNamePLAYERSKeyword_0_0()); }

	'PLAYERS' 

{ after(grammarAccess.getPlayerAccess().getNamePLAYERSKeyword_0_0()); }
)

{ after(grammarAccess.getPlayerAccess().getNamePLAYERSKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Player__PlayercountAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlayerAccess().getPlayercountINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getPlayerAccess().getPlayercountINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Player__VariablesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlayerAccess().getVariablesSimpleAssignmentParserRuleCall_3_0()); }
	ruleSimpleAssignment{ after(grammarAccess.getPlayerAccess().getVariablesSimpleAssignmentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Board__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoardAccess().getNameBOARDKeyword_0_0()); }
(
{ before(grammarAccess.getBoardAccess().getNameBOARDKeyword_0_0()); }

	'BOARD' 

{ after(grammarAccess.getBoardAccess().getNameBOARDKeyword_0_0()); }
)

{ after(grammarAccess.getBoardAccess().getNameBOARDKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Board__VariablesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoardAccess().getVariablesSimpleAssignmentParserRuleCall_2_0()); }
	ruleSimpleAssignment{ after(grammarAccess.getBoardAccess().getVariablesSimpleAssignmentParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Board__FieldsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoardAccess().getFieldsFieldParserRuleCall_3_0()); }
	ruleField{ after(grammarAccess.getBoardAccess().getFieldsFieldParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rules__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesAccess().getNameRULESKeyword_0_0()); }
(
{ before(grammarAccess.getRulesAccess().getNameRULESKeyword_0_0()); }

	'RULES' 

{ after(grammarAccess.getRulesAccess().getNameRULESKeyword_0_0()); }
)

{ after(grammarAccess.getRulesAccess().getNameRULESKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rules__TurnrulesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesAccess().getTurnrulesTurnRulesParserRuleCall_2_0()); }
	ruleTurnRules{ after(grammarAccess.getRulesAccess().getTurnrulesTurnRulesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRules__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnRulesAccess().getNameTURNKeyword_0_0()); }
(
{ before(grammarAccess.getTurnRulesAccess().getNameTURNKeyword_0_0()); }

	'TURN' 

{ after(grammarAccess.getTurnRulesAccess().getNameTURNKeyword_0_0()); }
)

{ after(grammarAccess.getTurnRulesAccess().getNameTURNKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TurnRules__ActionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnRulesAccess().getActionsActionParserRuleCall_2_0()); }
	ruleAction{ after(grammarAccess.getTurnRulesAccess().getActionsActionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Token__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTokenAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Token__VariablesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTokenAccess().getVariablesSimpleAssignmentParserRuleCall_3_0()); }
	ruleSimpleAssignment{ after(grammarAccess.getTokenAccess().getVariablesSimpleAssignmentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__XAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getXINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getFieldAccess().getXINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__YAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getYINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getFieldAccess().getYINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__ZAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getZINTTerminalRuleCall_6_0()); }
	RULE_INT{ after(grammarAccess.getFieldAccess().getZINTTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NeighboursAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNeighboursFieldCrossReference_9_0()); }
(
{ before(grammarAccess.getFieldAccess().getNeighboursFieldIDTerminalRuleCall_9_0_1()); }
	RULE_ID{ after(grammarAccess.getFieldAccess().getNeighboursFieldIDTerminalRuleCall_9_0_1()); }
)
{ after(grammarAccess.getFieldAccess().getNeighboursFieldCrossReference_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__VariablesAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getVariablesSimpleAssignmentParserRuleCall_10_0()); }
	ruleSimpleAssignment{ after(grammarAccess.getFieldAccess().getVariablesSimpleAssignmentParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameSPAWNKeyword_0_0_0()); }
(
{ before(grammarAccess.getActionAccess().getNameSPAWNKeyword_0_0_0()); }

	'SPAWN' 

{ after(grammarAccess.getActionAccess().getNameSPAWNKeyword_0_0_0()); }
)

{ after(grammarAccess.getActionAccess().getNameSPAWNKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__TokenAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getTokenTokenCrossReference_0_1_0()); }
(
{ before(grammarAccess.getActionAccess().getTokenTokenIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getActionAccess().getTokenTokenIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getActionAccess().getTokenTokenCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameMOVEKeyword_1_0()); }
(
{ before(grammarAccess.getActionAccess().getNameMOVEKeyword_1_0()); }

	'MOVE' 

{ after(grammarAccess.getActionAccess().getNameMOVEKeyword_1_0()); }
)

{ after(grammarAccess.getActionAccess().getNameMOVEKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameDESTROYKeyword_2_0()); }
(
{ before(grammarAccess.getActionAccess().getNameDESTROYKeyword_2_0()); }

	'DESTROY' 

{ after(grammarAccess.getActionAccess().getNameDESTROYKeyword_2_0()); }
)

{ after(grammarAccess.getActionAccess().getNameDESTROYKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getNameSELECTKeyword_3_0_0()); }
(
{ before(grammarAccess.getActionAccess().getNameSELECTKeyword_3_0_0()); }

	'SELECT' 

{ after(grammarAccess.getActionAccess().getNameSELECTKeyword_3_0_0()); }
)

{ after(grammarAccess.getActionAccess().getNameSELECTKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ObjectOfSelectAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getObjectOfSelectAlternatives_3_1_0()); }
(rule__Action__ObjectOfSelectAlternatives_3_1_0)
{ after(grammarAccess.getActionAccess().getObjectOfSelectAlternatives_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__FilterAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getFilterOrExpParserRuleCall_3_3_0()); }
	ruleOrExp{ after(grammarAccess.getActionAccess().getFilterOrExpParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__AssignmentAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getAssignmentValueAssignmentParserRuleCall_4_0()); }
	ruleValueAssignment{ after(grammarAccess.getActionAccess().getAssignmentValueAssignmentParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__GotoConditionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGotoConditionGotoConditionParserRuleCall_5_0()); }
	ruleGotoCondition{ after(grammarAccess.getActionAccess().getGotoConditionGotoConditionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__LabelAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getLabelLabelParserRuleCall_6_0()); }
	ruleLabel{ after(grammarAccess.getActionAccess().getLabelLabelParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__ExpressionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getExpressionsAndExpParserRuleCall_0_0()); }
	ruleAndExp{ after(grammarAccess.getOrExpAccess().getExpressionsAndExpParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__OperatorsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getOperatorsORKeyword_1_0_0()); }
(
{ before(grammarAccess.getOrExpAccess().getOperatorsORKeyword_1_0_0()); }

	'OR' 

{ after(grammarAccess.getOrExpAccess().getOperatorsORKeyword_1_0_0()); }
)

{ after(grammarAccess.getOrExpAccess().getOperatorsORKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExp__ExpressionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpAccess().getExpressionsAndExpParserRuleCall_1_1_0()); }
	ruleAndExp{ after(grammarAccess.getOrExpAccess().getExpressionsAndExpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__ExpressionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getExpressionsBooleanExpParserRuleCall_0_0()); }
	ruleBooleanExp{ after(grammarAccess.getAndExpAccess().getExpressionsBooleanExpParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__OperatorsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getOperatorsANDKeyword_1_0_0()); }
(
{ before(grammarAccess.getAndExpAccess().getOperatorsANDKeyword_1_0_0()); }

	'AND' 

{ after(grammarAccess.getAndExpAccess().getOperatorsANDKeyword_1_0_0()); }
)

{ after(grammarAccess.getAndExpAccess().getOperatorsANDKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExp__ExpressionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpAccess().getExpressionsBooleanExpParserRuleCall_1_1_0()); }
	ruleBooleanExp{ after(grammarAccess.getAndExpAccess().getExpressionsBooleanExpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__NotAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getNotNOTKeyword_0_0_0()); }
(
{ before(grammarAccess.getBooleanExpAccess().getNotNOTKeyword_0_0_0()); }

	'NOT' 

{ after(grammarAccess.getBooleanExpAccess().getNotNOTKeyword_0_0_0()); }
)

{ after(grammarAccess.getBooleanExpAccess().getNotNOTKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__LeftAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getLeftAttributeOrIntParserRuleCall_0_1_0_0()); }
	ruleAttributeOrInt{ after(grammarAccess.getBooleanExpAccess().getLeftAttributeOrIntParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__NameAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getNameAlternatives_0_1_1_0()); }
(rule__BooleanExp__NameAlternatives_0_1_1_0)
{ after(grammarAccess.getBooleanExpAccess().getNameAlternatives_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__RightAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getRightAttributeOrIntParserRuleCall_0_1_2_0()); }
	ruleAttributeOrInt{ after(grammarAccess.getBooleanExpAccess().getRightAttributeOrIntParserRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__NestedExpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getNestedExpOrExpParserRuleCall_1_1_0()); }
	ruleOrExp{ after(grammarAccess.getBooleanExpAccess().getNestedExpOrExpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAttributeNameAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__ParentAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getParentIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getAttributeNameAccess().getParentIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__ChildAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getChildAttributeNameParserRuleCall_1_2_0()); }
	ruleAttributeName{ after(grammarAccess.getAttributeNameAccess().getChildAttributeNameParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeOrInt__AttributeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeOrIntAccess().getAttributeAttributeNameParserRuleCall_0_0()); }
	ruleAttributeName{ after(grammarAccess.getAttributeOrIntAccess().getAttributeAttributeNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeOrInt__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeOrIntAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getAttributeOrIntAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GotoCondition__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoConditionAccess().getConditionOrExpParserRuleCall_1_0()); }
	ruleOrExp{ after(grammarAccess.getGotoConditionAccess().getConditionOrExpParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GotoCondition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoConditionAccess().getNameGOTOKeyword_2_0()); }
(
{ before(grammarAccess.getGotoConditionAccess().getNameGOTOKeyword_2_0()); }

	'GOTO' 

{ after(grammarAccess.getGotoConditionAccess().getNameGOTOKeyword_2_0()); }
)

{ after(grammarAccess.getGotoConditionAccess().getNameGOTOKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GotoCondition__GotoAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoConditionAccess().getGotoLabelCrossReference_3_0()); }
(
{ before(grammarAccess.getGotoConditionAccess().getGotoLabelIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getGotoConditionAccess().getGotoLabelIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getGotoConditionAccess().getGotoLabelCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExp__ExpressionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpAccess().getExpressionsMultiplicationExpParserRuleCall_0_0()); }
	ruleMultiplicationExp{ after(grammarAccess.getAdditionExpAccess().getExpressionsMultiplicationExpParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExp__OperatorsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpAccess().getOperatorsAlternatives_1_0_0()); }
(rule__AdditionExp__OperatorsAlternatives_1_0_0)
{ after(grammarAccess.getAdditionExpAccess().getOperatorsAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditionExp__ExpressionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditionExpAccess().getExpressionsMultiplicationExpParserRuleCall_1_1_0()); }
	ruleMultiplicationExp{ after(grammarAccess.getAdditionExpAccess().getExpressionsMultiplicationExpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExp__ExpressionsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpAccess().getExpressionsAttributeOrIntParserRuleCall_0_0_0()); }
	ruleAttributeOrInt{ after(grammarAccess.getMultiplicationExpAccess().getExpressionsAttributeOrIntParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExp__OperatorsAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpAccess().getOperatorsAlternatives_0_1_0_0()); }
(rule__MultiplicationExp__OperatorsAlternatives_0_1_0_0)
{ after(grammarAccess.getMultiplicationExpAccess().getOperatorsAlternatives_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExp__ExpressionsAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpAccess().getExpressionsAttributeOrIntParserRuleCall_0_1_1_0()); }
	ruleAttributeOrInt{ after(grammarAccess.getMultiplicationExpAccess().getExpressionsAttributeOrIntParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationExp__NestedExpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicationExpAccess().getNestedExpAdditionExpParserRuleCall_1_1_0()); }
	ruleAdditionExp{ after(grammarAccess.getMultiplicationExpAccess().getNestedExpAdditionExpParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getNameAttributeNameParserRuleCall_0_0()); }
	ruleAttributeName{ after(grammarAccess.getValueAssignmentAccess().getNameAttributeNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__AdditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getAdditionAdditionExpParserRuleCall_2_0()); }
	ruleAdditionExp{ after(grammarAccess.getValueAssignmentAccess().getAdditionAdditionExpParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAssignment__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAssignmentAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getSimpleAssignmentAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAssignment__AttributeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAssignmentAccess().getAttributeAttributeOrIntParserRuleCall_2_0()); }
	ruleAttributeOrInt{ after(grammarAccess.getSimpleAssignmentAccess().getAttributeAttributeOrIntParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


